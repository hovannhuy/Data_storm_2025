# -*- coding: utf-8 -*-
"""build_feature

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Jf908hxjzvYChNAMxr1RNeDbvyq3pIMG
"""

import cv2
import pandas as pd
import argparse
from pathlib import Path
from tqdm import tqdm
import sys

project_root = Path(__file__).resolve().parent.parent
sys.path.append(str(project_root))

from src.pose_extractor import PoseFeatureExtractor

def build_dataset(root_dir, output_csv):
    extractor = PoseFeatureExtractor()
    video_paths = sorted(list(Path(root_dir).rglob('*.mp4')))
    all_records = []

    for video_path in tqdm(video_paths, desc="Building Feature Dataset"):
        cap = cv2.VideoCapture(str(video_path))
        if not cap.isOpened(): continue

        frame_count = int(cap.get(cv2.CAP_PROP_FRAME_COUNT))
        mid_frame_idx = max(0, frame_count // 2)
        cap.set(cv2.CAP_PROP_POS_FRAMES, mid_frame_idx)
        ret, frame = cap.read()
        cap.release()

        if not ret: continue

        features = extractor.extract_features(frame)
        if features:
            relative_path = video_path.relative_to(root_dir)
            parts = relative_path.parts
            labels = {
                'view': parts[0], 'quality': parts[1],
                'label': 1 if 'Good' in parts[1] else 0,
                'category': parts[2], 'source_file': str(relative_path)
            }
            record = {**labels, **features}
            all_records.append(record)

    df = pd.DataFrame(all_records)
    df.to_csv(output_csv, index=False)
    print(f"\nFeature dataset built successfully. {len(df)} records saved to {output_csv}")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Build a feature dataset from golf swing videos.")
    parser.add_argument("--root_dir", required=True, help="Root directory of the dataset.")
    parser.add_argument("--output_csv", default="results/features_dataset.csv", help="Path to save the output CSV.")

    args = parser.parse_args()

    Path(args.output_csv).parent.mkdir(parents=True, exist_ok=True)
    build_dataset(args.root_dir, args.output_csv)